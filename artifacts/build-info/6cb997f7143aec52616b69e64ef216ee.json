{"id":"6cb997f7143aec52616b69e64ef216ee","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"contracts/generated/temporary/IPaymentTemporary.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"../../interface/types/IPayment.sol\";\n\ncontract IPaymentTemporary {\n  function request(IPayment.Request calldata _request) public pure {}\n  function response(IPayment.Response calldata _response) public pure {}\n  function proof(IPayment.Proof calldata _proof) public pure {}\n}\n  "},"contracts/interface/types/IPayment.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\n/**\n * @custom:name IPayment\n * @custom:id 0x01\n * @custom:supported BTC, DOGE, XRP, testBTC, testDOGE, testXRP\n * @author Flare\n * @notice A relay of a transaction on an external chain that is considered a payment in a native currency.\n * Various blockchains support different types of native payments. For each blockchain, it is specified how a payment\n * transaction should be formed to be provable by this attestation type.\n * The provable payments emulate traditional banking payments from entity A to entity B in native currency with an\n * optional payment reference.\n * @custom:verification The transaction with `transactionId` is fetched from the API of the blockchain node or\n * relevant indexer.\n * If the transaction cannot be fetched or the transaction is in a block that does not have a sufficient\n * [number of confirmations](/specs/attestations/configs.md#finalityconfirmation), the attestation request is rejected.\n *\n * Once the transaction is received, the payment summary is computed according to the rules for the source chain.\n * If the summary is successfully calculated, the response is assembled from the summary.\n * `blockNumber` and `blockTimestamp` are retrieved from the block if they are not included in the transaction data.\n * For Bitcoin and Dogecoin, `blockTimestamp` is mediantime of the block.\n * For XRPL, `blockTimestamp` is close time of the ledger converted to UNIX time.\n *\n * If the summary is not successfully calculated, the attestation request is rejected.\n * @custom:lut `blockTimestamp`\n */\ninterface IPayment {\n    /**\n     * @notice Toplevel request\n     * @param attestationType ID of the attestation type.\n     * @param sourceId ID of the data source.\n     * @param messageIntegrityCode `MessageIntegrityCode` that is derived from the expected response.\n     * @param requestBody Data defining the request. Type (struct) and interpretation is determined\n     * by the `attestationType`.\n     */\n    struct Request {\n        bytes32 attestationType;\n        bytes32 sourceId;\n        bytes32 messageIntegrityCode;\n        RequestBody requestBody;\n    }\n\n    /**\n     * @notice Toplevel response\n     * @param attestationType Extracted from the request.\n     * @param sourceId Extracted from the request.\n     * @param votingRound The ID of the State Connector round in which the request was considered.\n     * @param lowestUsedTimestamp The lowest timestamp used to generate the response.\n     * @param requestBody Extracted from the request.\n     * @param responseBody Data defining the response. The verification rules for the construction\n     * of the response body and the type are defined per specific `attestationType`.\n     */\n    struct Response {\n        bytes32 attestationType;\n        bytes32 sourceId;\n        uint64 votingRound;\n        uint64 lowestUsedTimestamp;\n        RequestBody requestBody;\n        ResponseBody responseBody;\n    }\n\n    /**\n     * @notice Toplevel proof\n     * @param merkleProof Merkle proof corresponding to the attestation response.\n     * @param data Attestation response.\n     */\n    struct Proof {\n        bytes32[] merkleProof;\n        Response data;\n    }\n\n    /**\n     * @notice Request body for Payment attestation type\n     * @param transactionId ID of the payment transaction.\n     * @param inUtxo For UTXO chains, this is the index of the transaction input with source address.\n     * Always 0 for the non-utxo chains.\n     * @param utxo For UTXO chains, this is the index of the transaction output with receiving address.\n     * Always 0 for the non-utxo chains.\n     */\n    struct RequestBody {\n        bytes32 transactionId;\n        uint256 inUtxo;\n        uint256 utxo;\n    }\n\n    /**\n     * @notice Response body for Payment attestation type\n     * @param blockNumber Number of the block in which the transaction is included.\n     * @param blockTimestamp The timestamp of the block in which the transaction is included.\n     * @param sourceAddressHash Standard address hash of the source address.\n     * @param receivingAddressHash Standard address hash of the receiving address.\n     * The zero 32-byte string if there is no receivingAddress (if `status` is not success).\n     * @param intendedReceivingAddressHash Standard address hash of the intended receiving address.\n     * Relevant if the transaction is unsuccessful.\n     * @param spentAmount Amount in minimal units spent by the source address.\n     * @param intendedSpentAmount Amount in minimal units to be spent by the source address.\n     * Relevant if the transaction status is unsuccessful.\n     * @param receivedAmount Amount in minimal units received by the receiving address.\n     * @param intendedReceivedAmount Amount in minimal units intended to be received by the receiving address.\n     * Relevant if the transaction is unsuccessful.\n     * @param standardPaymentReference Standard payment reference of the transaction.\n     * @param oneToOne Indicator whether only one source and one receiver are involved in the transaction.\n     * @param status Succes status of the transaction: 0 - success, 1 - failed by sender's fault,\n     * 2 - failed by receiver's fault.\n     */\n    struct ResponseBody {\n        uint64 blockNumber;\n        uint64 blockTimestamp;\n        bytes32 sourceAddressHash;\n        bytes32 receivingAddressHash;\n        bytes32 intendedReceivingAddressHash;\n        int256 spentAmount;\n        int256 intendedSpentAmount;\n        int256 receivedAmount;\n        int256 intendedReceivedAmount;\n        bytes32 standardPaymentReference;\n        bool oneToOne;\n        uint8 status;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/generated/temporary/IPaymentTemporary.sol":{"ast":{"absolutePath":"contracts/generated/temporary/IPaymentTemporary.sol","exportedSymbols":{"IPayment":[97],"IPaymentTemporary":[24]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"contracts/interface/types/IPayment.sol","file":"../../interface/types/IPayment.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":25,"sourceUnit":98,"src":"57:44:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymentTemporary","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":24,"linearizedBaseContracts":[24],"name":"IPaymentTemporary","nameLocation":"112:17:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":8,"nodeType":"Block","src":"199:2:0","statements":[]},"functionSelector":"68ed074a","id":9,"implemented":true,"kind":"function","modifiers":[],"name":"request","nameLocation":"143:7:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"_request","nameLocation":"177:8:0","nodeType":"VariableDeclaration","scope":9,"src":"151:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$38_calldata_ptr","typeString":"struct IPayment.Request"},"typeName":{"id":4,"nodeType":"UserDefinedTypeName","pathNode":{"id":3,"name":"IPayment.Request","nameLocations":["151:8:0","160:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"151:16:0"},"referencedDeclaration":38,"src":"151:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$38_storage_ptr","typeString":"struct IPayment.Request"}},"visibility":"internal"}],"src":"150:36:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"199:0:0"},"scope":24,"src":"134:67:0","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":15,"nodeType":"Block","src":"272:2:0","statements":[]},"functionSelector":"611e9d1e","id":16,"implemented":true,"kind":"function","modifiers":[],"name":"response","nameLocation":"213:8:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"_response","nameLocation":"249:9:0","nodeType":"VariableDeclaration","scope":16,"src":"222:36:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Response_$54_calldata_ptr","typeString":"struct IPayment.Response"},"typeName":{"id":11,"nodeType":"UserDefinedTypeName","pathNode":{"id":10,"name":"IPayment.Response","nameLocations":["222:8:0","231:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":54,"src":"222:17:0"},"referencedDeclaration":54,"src":"222:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Response_$54_storage_ptr","typeString":"struct IPayment.Response"}},"visibility":"internal"}],"src":"221:38:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[],"src":"272:0:0"},"scope":24,"src":"204:70:0","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":22,"nodeType":"Block","src":"336:2:0","statements":[]},"functionSelector":"88a9e071","id":23,"implemented":true,"kind":"function","modifiers":[],"name":"proof","nameLocation":"286:5:0","nodeType":"FunctionDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"_proof","nameLocation":"316:6:0","nodeType":"VariableDeclaration","scope":23,"src":"292:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$62_calldata_ptr","typeString":"struct IPayment.Proof"},"typeName":{"id":18,"nodeType":"UserDefinedTypeName","pathNode":{"id":17,"name":"IPayment.Proof","nameLocations":["292:8:0","301:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"292:14:0"},"referencedDeclaration":62,"src":"292:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$62_storage_ptr","typeString":"struct IPayment.Proof"}},"visibility":"internal"}],"src":"291:32:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"336:0:0"},"scope":24,"src":"277:61:0","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":25,"src":"103:237:0","usedErrors":[],"usedEvents":[]}],"src":"32:311:0"},"id":0},"contracts/interface/types/IPayment.sol":{"ast":{"absolutePath":"contracts/interface/types/IPayment.sol","exportedSymbols":{"IPayment":[97]},"id":98,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity",">=","0.7",".6","<","0.9"],"nodeType":"PragmaDirective","src":"32:29:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IPayment","contractDependencies":[],"contractKind":"interface","documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"63:1536:1","text":" @custom:name IPayment\n @custom:id 0x01\n @custom:supported BTC, DOGE, XRP, testBTC, testDOGE, testXRP\n @author Flare\n @notice A relay of a transaction on an external chain that is considered a payment in a native currency.\n Various blockchains support different types of native payments. For each blockchain, it is specified how a payment\n transaction should be formed to be provable by this attestation type.\n The provable payments emulate traditional banking payments from entity A to entity B in native currency with an\n optional payment reference.\n @custom:verification The transaction with `transactionId` is fetched from the API of the blockchain node or\n relevant indexer.\n If the transaction cannot be fetched or the transaction is in a block that does not have a sufficient\n [number of confirmations](/specs/attestations/configs.md#finalityconfirmation), the attestation request is rejected.\n Once the transaction is received, the payment summary is computed according to the rules for the source chain.\n If the summary is successfully calculated, the response is assembled from the summary.\n `blockNumber` and `blockTimestamp` are retrieved from the block if they are not included in the transaction data.\n For Bitcoin and Dogecoin, `blockTimestamp` is mediantime of the block.\n For XRPL, `blockTimestamp` is close time of the ledger converted to UNIX time.\n If the summary is not successfully calculated, the attestation request is rejected.\n @custom:lut `blockTimestamp`"},"fullyImplemented":true,"id":97,"linearizedBaseContracts":[97],"name":"IPayment","nameLocation":"1610:8:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPayment.Request","documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1625:382:1","text":" @notice Toplevel request\n @param attestationType ID of the attestation type.\n @param sourceId ID of the data source.\n @param messageIntegrityCode `MessageIntegrityCode` that is derived from the expected response.\n @param requestBody Data defining the request. Type (struct) and interpretation is determined\n by the `attestationType`."},"id":38,"members":[{"constant":false,"id":30,"mutability":"mutable","name":"attestationType","nameLocation":"2045:15:1","nodeType":"VariableDeclaration","scope":38,"src":"2037:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"sourceId","nameLocation":"2078:8:1","nodeType":"VariableDeclaration","scope":38,"src":"2070:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2070:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"messageIntegrityCode","nameLocation":"2104:20:1","nodeType":"VariableDeclaration","scope":38,"src":"2096:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":33,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2096:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"requestBody","nameLocation":"2146:11:1","nodeType":"VariableDeclaration","scope":38,"src":"2134:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RequestBody_$70_storage_ptr","typeString":"struct IPayment.RequestBody"},"typeName":{"id":36,"nodeType":"UserDefinedTypeName","pathNode":{"id":35,"name":"RequestBody","nameLocations":["2134:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"2134:11:1"},"referencedDeclaration":70,"src":"2134:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_RequestBody_$70_storage_ptr","typeString":"struct IPayment.RequestBody"}},"visibility":"internal"}],"name":"Request","nameLocation":"2019:7:1","nodeType":"StructDefinition","scope":97,"src":"2012:152:1","visibility":"public"},{"canonicalName":"IPayment.Response","documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2170:576:1","text":" @notice Toplevel response\n @param attestationType Extracted from the request.\n @param sourceId Extracted from the request.\n @param votingRound The ID of the State Connector round in which the request was considered.\n @param lowestUsedTimestamp The lowest timestamp used to generate the response.\n @param requestBody Extracted from the request.\n @param responseBody Data defining the response. The verification rules for the construction\n of the response body and the type are defined per specific `attestationType`."},"id":54,"members":[{"constant":false,"id":41,"mutability":"mutable","name":"attestationType","nameLocation":"2785:15:1","nodeType":"VariableDeclaration","scope":54,"src":"2777:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2777:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":43,"mutability":"mutable","name":"sourceId","nameLocation":"2818:8:1","nodeType":"VariableDeclaration","scope":54,"src":"2810:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2810:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"votingRound","nameLocation":"2843:11:1","nodeType":"VariableDeclaration","scope":54,"src":"2836:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":44,"name":"uint64","nodeType":"ElementaryTypeName","src":"2836:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"lowestUsedTimestamp","nameLocation":"2871:19:1","nodeType":"VariableDeclaration","scope":54,"src":"2864:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":46,"name":"uint64","nodeType":"ElementaryTypeName","src":"2864:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"requestBody","nameLocation":"2912:11:1","nodeType":"VariableDeclaration","scope":54,"src":"2900:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RequestBody_$70_storage_ptr","typeString":"struct IPayment.RequestBody"},"typeName":{"id":49,"nodeType":"UserDefinedTypeName","pathNode":{"id":48,"name":"RequestBody","nameLocations":["2900:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"2900:11:1"},"referencedDeclaration":70,"src":"2900:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_RequestBody_$70_storage_ptr","typeString":"struct IPayment.RequestBody"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"responseBody","nameLocation":"2946:12:1","nodeType":"VariableDeclaration","scope":54,"src":"2933:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ResponseBody_$96_storage_ptr","typeString":"struct IPayment.ResponseBody"},"typeName":{"id":52,"nodeType":"UserDefinedTypeName","pathNode":{"id":51,"name":"ResponseBody","nameLocations":["2933:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":96,"src":"2933:12:1"},"referencedDeclaration":96,"src":"2933:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ResponseBody_$96_storage_ptr","typeString":"struct IPayment.ResponseBody"}},"visibility":"internal"}],"name":"Response","nameLocation":"2758:8:1","nodeType":"StructDefinition","scope":97,"src":"2751:214:1","visibility":"public"},{"canonicalName":"IPayment.Proof","documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2971:164:1","text":" @notice Toplevel proof\n @param merkleProof Merkle proof corresponding to the attestation response.\n @param data Attestation response."},"id":62,"members":[{"constant":false,"id":58,"mutability":"mutable","name":"merkleProof","nameLocation":"3173:11:1","nodeType":"VariableDeclaration","scope":62,"src":"3163:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":56,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3163:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":57,"nodeType":"ArrayTypeName","src":"3163:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":61,"mutability":"mutable","name":"data","nameLocation":"3203:4:1","nodeType":"VariableDeclaration","scope":62,"src":"3194:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Response_$54_storage_ptr","typeString":"struct IPayment.Response"},"typeName":{"id":60,"nodeType":"UserDefinedTypeName","pathNode":{"id":59,"name":"Response","nameLocations":["3194:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":54,"src":"3194:8:1"},"referencedDeclaration":54,"src":"3194:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Response_$54_storage_ptr","typeString":"struct IPayment.Response"}},"visibility":"internal"}],"name":"Proof","nameLocation":"3147:5:1","nodeType":"StructDefinition","scope":97,"src":"3140:74:1","visibility":"public"},{"canonicalName":"IPayment.RequestBody","documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"3220:415:1","text":" @notice Request body for Payment attestation type\n @param transactionId ID of the payment transaction.\n @param inUtxo For UTXO chains, this is the index of the transaction input with source address.\n Always 0 for the non-utxo chains.\n @param utxo For UTXO chains, this is the index of the transaction output with receiving address.\n Always 0 for the non-utxo chains."},"id":70,"members":[{"constant":false,"id":65,"mutability":"mutable","name":"transactionId","nameLocation":"3677:13:1","nodeType":"VariableDeclaration","scope":70,"src":"3669:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3669:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"inUtxo","nameLocation":"3708:6:1","nodeType":"VariableDeclaration","scope":70,"src":"3700:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"3700:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"utxo","nameLocation":"3732:4:1","nodeType":"VariableDeclaration","scope":70,"src":"3724:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RequestBody","nameLocation":"3647:11:1","nodeType":"StructDefinition","scope":97,"src":"3640:103:1","visibility":"public"},{"canonicalName":"IPayment.ResponseBody","documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"3749:1464:1","text":" @notice Response body for Payment attestation type\n @param blockNumber Number of the block in which the transaction is included.\n @param blockTimestamp The timestamp of the block in which the transaction is included.\n @param sourceAddressHash Standard address hash of the source address.\n @param receivingAddressHash Standard address hash of the receiving address.\n The zero 32-byte string if there is no receivingAddress (if `status` is not success).\n @param intendedReceivingAddressHash Standard address hash of the intended receiving address.\n Relevant if the transaction is unsuccessful.\n @param spentAmount Amount in minimal units spent by the source address.\n @param intendedSpentAmount Amount in minimal units to be spent by the source address.\n Relevant if the transaction status is unsuccessful.\n @param receivedAmount Amount in minimal units received by the receiving address.\n @param intendedReceivedAmount Amount in minimal units intended to be received by the receiving address.\n Relevant if the transaction is unsuccessful.\n @param standardPaymentReference Standard payment reference of the transaction.\n @param oneToOne Indicator whether only one source and one receiver are involved in the transaction.\n @param status Succes status of the transaction: 0 - success, 1 - failed by sender's fault,\n 2 - failed by receiver's fault."},"id":96,"members":[{"constant":false,"id":73,"mutability":"mutable","name":"blockNumber","nameLocation":"5255:11:1","nodeType":"VariableDeclaration","scope":96,"src":"5248:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":72,"name":"uint64","nodeType":"ElementaryTypeName","src":"5248:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"blockTimestamp","nameLocation":"5283:14:1","nodeType":"VariableDeclaration","scope":96,"src":"5276:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":74,"name":"uint64","nodeType":"ElementaryTypeName","src":"5276:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"sourceAddressHash","nameLocation":"5315:17:1","nodeType":"VariableDeclaration","scope":96,"src":"5307:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":76,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5307:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"receivingAddressHash","nameLocation":"5350:20:1","nodeType":"VariableDeclaration","scope":96,"src":"5342:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":78,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5342:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"intendedReceivingAddressHash","nameLocation":"5388:28:1","nodeType":"VariableDeclaration","scope":96,"src":"5380:36:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":80,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5380:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"spentAmount","nameLocation":"5433:11:1","nodeType":"VariableDeclaration","scope":96,"src":"5426:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82,"name":"int256","nodeType":"ElementaryTypeName","src":"5426:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"intendedSpentAmount","nameLocation":"5461:19:1","nodeType":"VariableDeclaration","scope":96,"src":"5454:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":84,"name":"int256","nodeType":"ElementaryTypeName","src":"5454:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"receivedAmount","nameLocation":"5497:14:1","nodeType":"VariableDeclaration","scope":96,"src":"5490:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":86,"name":"int256","nodeType":"ElementaryTypeName","src":"5490:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"intendedReceivedAmount","nameLocation":"5528:22:1","nodeType":"VariableDeclaration","scope":96,"src":"5521:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":88,"name":"int256","nodeType":"ElementaryTypeName","src":"5521:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"standardPaymentReference","nameLocation":"5568:24:1","nodeType":"VariableDeclaration","scope":96,"src":"5560:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":90,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"oneToOne","nameLocation":"5607:8:1","nodeType":"VariableDeclaration","scope":96,"src":"5602:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92,"name":"bool","nodeType":"ElementaryTypeName","src":"5602:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"status","nameLocation":"5631:6:1","nodeType":"VariableDeclaration","scope":96,"src":"5625:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":94,"name":"uint8","nodeType":"ElementaryTypeName","src":"5625:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ResponseBody","nameLocation":"5225:12:1","nodeType":"StructDefinition","scope":97,"src":"5218:426:1","visibility":"public"}],"scope":98,"src":"1600:4046:1","usedErrors":[],"usedEvents":[]}],"src":"32:5615:1"},"id":1}},"contracts":{"contracts/generated/temporary/IPaymentTemporary.sol":{"IPaymentTemporary":{"abi":[{"inputs":[{"components":[{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"},{"components":[{"internalType":"bytes32","name":"attestationType","type":"bytes32"},{"internalType":"bytes32","name":"sourceId","type":"bytes32"},{"internalType":"uint64","name":"votingRound","type":"uint64"},{"internalType":"uint64","name":"lowestUsedTimestamp","type":"uint64"},{"components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"uint256","name":"inUtxo","type":"uint256"},{"internalType":"uint256","name":"utxo","type":"uint256"}],"internalType":"struct IPayment.RequestBody","name":"requestBody","type":"tuple"},{"components":[{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"uint64","name":"blockTimestamp","type":"uint64"},{"internalType":"bytes32","name":"sourceAddressHash","type":"bytes32"},{"internalType":"bytes32","name":"receivingAddressHash","type":"bytes32"},{"internalType":"bytes32","name":"intendedReceivingAddressHash","type":"bytes32"},{"internalType":"int256","name":"spentAmount","type":"int256"},{"internalType":"int256","name":"intendedSpentAmount","type":"int256"},{"internalType":"int256","name":"receivedAmount","type":"int256"},{"internalType":"int256","name":"intendedReceivedAmount","type":"int256"},{"internalType":"bytes32","name":"standardPaymentReference","type":"bytes32"},{"internalType":"bool","name":"oneToOne","type":"bool"},{"internalType":"uint8","name":"status","type":"uint8"}],"internalType":"struct IPayment.ResponseBody","name":"responseBody","type":"tuple"}],"internalType":"struct IPayment.Response","name":"data","type":"tuple"}],"internalType":"struct IPayment.Proof","name":"_proof","type":"tuple"}],"name":"proof","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"attestationType","type":"bytes32"},{"internalType":"bytes32","name":"sourceId","type":"bytes32"},{"internalType":"bytes32","name":"messageIntegrityCode","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"uint256","name":"inUtxo","type":"uint256"},{"internalType":"uint256","name":"utxo","type":"uint256"}],"internalType":"struct IPayment.RequestBody","name":"requestBody","type":"tuple"}],"internalType":"struct IPayment.Request","name":"_request","type":"tuple"}],"name":"request","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"attestationType","type":"bytes32"},{"internalType":"bytes32","name":"sourceId","type":"bytes32"},{"internalType":"uint64","name":"votingRound","type":"uint64"},{"internalType":"uint64","name":"lowestUsedTimestamp","type":"uint64"},{"components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"uint256","name":"inUtxo","type":"uint256"},{"internalType":"uint256","name":"utxo","type":"uint256"}],"internalType":"struct IPayment.RequestBody","name":"requestBody","type":"tuple"},{"components":[{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"uint64","name":"blockTimestamp","type":"uint64"},{"internalType":"bytes32","name":"sourceAddressHash","type":"bytes32"},{"internalType":"bytes32","name":"receivingAddressHash","type":"bytes32"},{"internalType":"bytes32","name":"intendedReceivingAddressHash","type":"bytes32"},{"internalType":"int256","name":"spentAmount","type":"int256"},{"internalType":"int256","name":"intendedSpentAmount","type":"int256"},{"internalType":"int256","name":"receivedAmount","type":"int256"},{"internalType":"int256","name":"intendedReceivedAmount","type":"int256"},{"internalType":"bytes32","name":"standardPaymentReference","type":"bytes32"},{"internalType":"bool","name":"oneToOne","type":"bool"},{"internalType":"uint8","name":"status","type":"uint8"}],"internalType":"struct IPayment.ResponseBody","name":"responseBody","type":"tuple"}],"internalType":"struct IPayment.Response","name":"_response","type":"tuple"}],"name":"response","outputs":[],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610106806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063611e9d1e14604157806368ed074a14605157806388a9e07114605c575b600080fd5b604f604c3660046067565b50565b005b604f604c366004607f565b604f604c3660046090565b60006102608284031215607957600080fd5b50919050565b600060c08284031215607957600080fd5b60006020828403121560a157600080fd5b813567ffffffffffffffff81111560b757600080fd5b8201610280818503121560c957600080fd5b939250505056fea26469706673582212205c1e4ab470fd233a39d5e715db7281e4e52b6430aa44f30325ea3311a1928a8a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x611E9D1E EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x68ED074A EQ PUSH1 0x51 JUMPI DUP1 PUSH4 0x88A9E071 EQ PUSH1 0x5C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4F PUSH1 0x4C CALLDATASIZE PUSH1 0x4 PUSH1 0x67 JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4F PUSH1 0x4C CALLDATASIZE PUSH1 0x4 PUSH1 0x7F JUMP JUMPDEST PUSH1 0x4F PUSH1 0x4C CALLDATASIZE PUSH1 0x4 PUSH1 0x90 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH1 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH2 0x280 DUP2 DUP6 SUB SLT ISZERO PUSH1 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x1E 0x4A 0xB4 PUSH17 0xFD233A39D5E715DB7281E4E52B6430AA44 RETURN SUB 0x25 0xEA CALLER GT LOG1 SWAP3 DUP11 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"103:237:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@proof_23":{"entryPoint":null,"id":23,"parameterSlots":1,"returnSlots":0},"@request_9":{"entryPoint":null,"id":9,"parameterSlots":1,"returnSlots":0},"@response_16":{"entryPoint":null,"id":16,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_struct$_Proof_$62_calldata_ptr":{"entryPoint":144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Request_$38_calldata_ptr":{"entryPoint":127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Response_$54_calldata_ptr":{"entryPoint":103,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:794:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"110:97:2","statements":[{"body":{"nodeType":"YulBlock","src":"157:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"166:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"169:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"159:6:2"},"nodeType":"YulFunctionCall","src":"159:12:2"},"nodeType":"YulExpressionStatement","src":"159:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"131:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"140:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"127:3:2"},"nodeType":"YulFunctionCall","src":"127:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"152:3:2","type":"","value":"608"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"123:3:2"},"nodeType":"YulFunctionCall","src":"123:33:2"},"nodeType":"YulIf","src":"120:53:2"},{"nodeType":"YulAssignment","src":"182:19:2","value":{"name":"headStart","nodeType":"YulIdentifier","src":"192:9:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:2"}]}]},"name":"abi_decode_tuple_t_struct$_Response_$54_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"76:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"87:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"99:6:2","type":""}],"src":"14:193:2"},{"body":{"nodeType":"YulBlock","src":"307:97:2","statements":[{"body":{"nodeType":"YulBlock","src":"354:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"363:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"366:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"356:6:2"},"nodeType":"YulFunctionCall","src":"356:12:2"},"nodeType":"YulExpressionStatement","src":"356:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"328:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"337:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"324:3:2"},"nodeType":"YulFunctionCall","src":"324:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"349:3:2","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"320:3:2"},"nodeType":"YulFunctionCall","src":"320:33:2"},"nodeType":"YulIf","src":"317:53:2"},{"nodeType":"YulAssignment","src":"379:19:2","value":{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"379:6:2"}]}]},"name":"abi_decode_tuple_t_struct$_Request_$38_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"273:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"284:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"296:6:2","type":""}],"src":"212:192:2"},{"body":{"nodeType":"YulBlock","src":"502:290:2","statements":[{"body":{"nodeType":"YulBlock","src":"548:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"557:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"560:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"550:6:2"},"nodeType":"YulFunctionCall","src":"550:12:2"},"nodeType":"YulExpressionStatement","src":"550:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"523:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"532:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"519:3:2"},"nodeType":"YulFunctionCall","src":"519:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"544:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"515:3:2"},"nodeType":"YulFunctionCall","src":"515:32:2"},"nodeType":"YulIf","src":"512:52:2"},{"nodeType":"YulVariableDeclaration","src":"573:37:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"600:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"587:12:2"},"nodeType":"YulFunctionCall","src":"587:23:2"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"577:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"662:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"665:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"655:6:2"},"nodeType":"YulFunctionCall","src":"655:12:2"},"nodeType":"YulExpressionStatement","src":"655:12:2"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"625:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"633:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"622:2:2"},"nodeType":"YulFunctionCall","src":"622:30:2"},"nodeType":"YulIf","src":"619:50:2"},{"nodeType":"YulVariableDeclaration","src":"678:32:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"692:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"703:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"688:3:2"},"nodeType":"YulFunctionCall","src":"688:22:2"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"682:2:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"749:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"758:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"751:6:2"},"nodeType":"YulFunctionCall","src":"751:12:2"},"nodeType":"YulExpressionStatement","src":"751:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"730:7:2"},{"name":"_1","nodeType":"YulIdentifier","src":"739:2:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"726:3:2"},"nodeType":"YulFunctionCall","src":"726:16:2"},{"kind":"number","nodeType":"YulLiteral","src":"744:3:2","type":"","value":"640"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"722:3:2"},"nodeType":"YulFunctionCall","src":"722:26:2"},"nodeType":"YulIf","src":"719:46:2"},{"nodeType":"YulAssignment","src":"774:12:2","value":{"name":"_1","nodeType":"YulIdentifier","src":"784:2:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"774:6:2"}]}]},"name":"abi_decode_tuple_t_struct$_Proof_$62_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"468:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"479:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"491:6:2","type":""}],"src":"409:383:2"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_struct$_Response_$54_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 608) { revert(0, 0) }\n        value0 := headStart\n    }\n    function abi_decode_tuple_t_struct$_Request_$38_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := headStart\n    }\n    function abi_decode_tuple_t_struct$_Proof_$62_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 640) { revert(0, 0) }\n        value0 := _1\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063611e9d1e14604157806368ed074a14605157806388a9e07114605c575b600080fd5b604f604c3660046067565b50565b005b604f604c366004607f565b604f604c3660046090565b60006102608284031215607957600080fd5b50919050565b600060c08284031215607957600080fd5b60006020828403121560a157600080fd5b813567ffffffffffffffff81111560b757600080fd5b8201610280818503121560c957600080fd5b939250505056fea26469706673582212205c1e4ab470fd233a39d5e715db7281e4e52b6430aa44f30325ea3311a1928a8a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x611E9D1E EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x68ED074A EQ PUSH1 0x51 JUMPI DUP1 PUSH4 0x88A9E071 EQ PUSH1 0x5C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4F PUSH1 0x4C CALLDATASIZE PUSH1 0x4 PUSH1 0x67 JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4F PUSH1 0x4C CALLDATASIZE PUSH1 0x4 PUSH1 0x7F JUMP JUMPDEST PUSH1 0x4F PUSH1 0x4C CALLDATASIZE PUSH1 0x4 PUSH1 0x90 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH1 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH2 0x280 DUP2 DUP6 SUB SLT ISZERO PUSH1 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x1E 0x4A 0xB4 PUSH17 0xFD233A39D5E715DB7281E4E52B6430AA44 RETURN SUB 0x25 0xEA CALLER GT LOG1 SWAP3 DUP11 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"103:237:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;204:70;;;;;;:::i;:::-;;;;;134:67;;;;;;:::i;277:61::-;;;;;;:::i;14:193:2:-;99:6;152:3;140:9;131:7;127:23;123:33;120:53;;;169:1;166;159:12;120:53;-1:-1:-1;192:9:2;14:193;-1:-1:-1;14:193:2:o;212:192::-;296:6;349:3;337:9;328:7;324:23;320:33;317:53;;;366:1;363;356:12;409:383;491:6;544:2;532:9;523:7;519:23;515:32;512:52;;;560:1;557;550:12;512:52;600:9;587:23;633:18;625:6;622:30;619:50;;;665:1;662;655:12;619:50;688:22;;744:3;726:16;;;722:26;719:46;;;761:1;758;751:12;719:46;784:2;409:383;-1:-1:-1;;;409:383:2:o"},"methodIdentifiers":{"proof((bytes32[],(bytes32,bytes32,uint64,uint64,(bytes32,uint256,uint256),(uint64,uint64,bytes32,bytes32,bytes32,int256,int256,int256,int256,bytes32,bool,uint8))))":"88a9e071","request((bytes32,bytes32,bytes32,(bytes32,uint256,uint256)))":"68ed074a","response((bytes32,bytes32,uint64,uint64,(bytes32,uint256,uint256),(uint64,uint64,bytes32,bytes32,bytes32,int256,int256,int256,int256,bytes32,bool,uint8)))":"611e9d1e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"attestationType\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sourceId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"votingRound\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lowestUsedTimestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"inUtxo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utxo\",\"type\":\"uint256\"}],\"internalType\":\"struct IPayment.RequestBody\",\"name\":\"requestBody\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"blockTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddressHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"receivingAddressHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"intendedReceivingAddressHash\",\"type\":\"bytes32\"},{\"internalType\":\"int256\",\"name\":\"spentAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"intendedSpentAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"receivedAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"intendedReceivedAmount\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"standardPaymentReference\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"oneToOne\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IPayment.ResponseBody\",\"name\":\"responseBody\",\"type\":\"tuple\"}],\"internalType\":\"struct IPayment.Response\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct IPayment.Proof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"proof\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"attestationType\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sourceId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"messageIntegrityCode\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"inUtxo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utxo\",\"type\":\"uint256\"}],\"internalType\":\"struct IPayment.RequestBody\",\"name\":\"requestBody\",\"type\":\"tuple\"}],\"internalType\":\"struct IPayment.Request\",\"name\":\"_request\",\"type\":\"tuple\"}],\"name\":\"request\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"attestationType\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sourceId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"votingRound\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lowestUsedTimestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"inUtxo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utxo\",\"type\":\"uint256\"}],\"internalType\":\"struct IPayment.RequestBody\",\"name\":\"requestBody\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"blockTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddressHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"receivingAddressHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"intendedReceivingAddressHash\",\"type\":\"bytes32\"},{\"internalType\":\"int256\",\"name\":\"spentAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"intendedSpentAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"receivedAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"intendedReceivedAmount\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"standardPaymentReference\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"oneToOne\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IPayment.ResponseBody\",\"name\":\"responseBody\",\"type\":\"tuple\"}],\"internalType\":\"struct IPayment.Response\",\"name\":\"_response\",\"type\":\"tuple\"}],\"name\":\"response\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/generated/temporary/IPaymentTemporary.sol\":\"IPaymentTemporary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/generated/temporary/IPaymentTemporary.sol\":{\"keccak256\":\"0x800d87bd19aa6ee083d0799f81f6f874b1c9df845c74c061faa817db8115a5f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21a33b150ccb68bdf8c610d8dec6724aa489274698a7656d800305232e8aa242\",\"dweb:/ipfs/QmWJ7doh1JcADniywyz1tt6qZYepVALHMaTVczienA7ioN\"]},\"contracts/interface/types/IPayment.sol\":{\"keccak256\":\"0x97ad252689ad04f9ec8a1f7e22151d141c0a870e579a58605c5d6cf6586b9e91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://706a4dc514d8c19b44abe4c0e4f6295456b5600a02aa589be992ab2593494edd\",\"dweb:/ipfs/QmPohXVqgxjnGcGrLoqv6VvQ2eyQy84ShsFXo9bxsJ5N1n\"]}},\"version\":1}"}},"contracts/interface/types/IPayment.sol":{"IPayment":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Flare\",\"custom:id\":\"0x01\",\"custom:lut\":\"`blockTimestamp`\",\"custom:name\":\"IPayment\",\"custom:supported\":\"BTC, DOGE, XRP, testBTC, testDOGE, testXRP\",\"custom:verification\":\"The transaction with `transactionId` is fetched from the API of the blockchain node or relevant indexer. If the transaction cannot be fetched or the transaction is in a block that does not have a sufficient [number of confirmations](/specs/attestations/configs.md#finalityconfirmation), the attestation request is rejected. Once the transaction is received, the payment summary is computed according to the rules for the source chain. If the summary is successfully calculated, the response is assembled from the summary. `blockNumber` and `blockTimestamp` are retrieved from the block if they are not included in the transaction data. For Bitcoin and Dogecoin, `blockTimestamp` is mediantime of the block. For XRPL, `blockTimestamp` is close time of the ledger converted to UNIX time. If the summary is not successfully calculated, the attestation request is rejected.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A relay of a transaction on an external chain that is considered a payment in a native currency. Various blockchains support different types of native payments. For each blockchain, it is specified how a payment transaction should be formed to be provable by this attestation type. The provable payments emulate traditional banking payments from entity A to entity B in native currency with an optional payment reference.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/types/IPayment.sol\":\"IPayment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/types/IPayment.sol\":{\"keccak256\":\"0x97ad252689ad04f9ec8a1f7e22151d141c0a870e579a58605c5d6cf6586b9e91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://706a4dc514d8c19b44abe4c0e4f6295456b5600a02aa589be992ab2593494edd\",\"dweb:/ipfs/QmPohXVqgxjnGcGrLoqv6VvQ2eyQy84ShsFXo9bxsJ5N1n\"]}},\"version\":1}"}}}}}